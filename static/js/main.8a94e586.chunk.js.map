{"version":3,"sources":["ContactForm/ContactForm.module.css","ContactList/ContactList.module.css","Filter/Filter.module.css","redux/contacts/actions.js","services/api.js","redux/contacts/contacts-operations.js","ContactForm/ContactFormHooks.js","ContactList/ContactListHooks.js","Filter/FilterHooks.js","AppHooks.js","redux/contacts/reducers.js","redux/store.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","changeFilter","fetchContactsAPI","a","axios","get","data","deleteContactsAPI","id","delete","defaults","baseURL","fetchContacts","createAsyncThunk","contacts","addContact","name","number","dispatch","contact","post","then","catch","error","deleteContact","console","log","connect","phonebookContacts","onSubmit","useState","setName","setNumber","handleChange","e","target","value","preventDefault","className","s","input__field","onChange","type","pattern","title","required","form__button","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","phonebookFilter","fetchContactsAll","isLoading","useEffect","contacts__list","map","contacts__button","onClick","htmlFor","filter__field","currentTarget","App","createReducer","fulfilled","_","payload","state","some","alert","loading","pending","rejected","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a94e586.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input__field\":\"ContactForm_input__field__3mVkt\",\"form__button\":\"ContactForm_form__button__5UX7f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactList_contacts__list__Pyj5_\",\"contacts__button\":\"ContactList_contacts__button__eoAlX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__field\":\"Filter_filter__field__2g_TK\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// const addContact = createAction(\"contacts/add\", (name, number) => ({\r\n//   payload: {\r\n//     id: shortid.generate(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// }));\r\n\r\nexport const fetchContactRequest =\r\n  createAction(\"contacts/fetchContactRequest\")\r\nexport const fetchContactSuccess =\r\n  createAction(\"contacts/fetchContactSuccess\")\r\nexport const fetchContactError =\r\n  createAction(\"contacts/fetchContactError\")\r\n\r\nexport const addContactRequest =\r\n  createAction(\"contacts/addContactRequest\")\r\nexport const addContactSuccess =\r\n  createAction(\"contacts/addContactSuccess\")\r\nexport const addContactError =\r\n  createAction(\"contacts/addContactError\")\r\n\r\nexport const deleteContactRequest =\r\n  createAction(\"contacts/deleteContactRequest\")\r\nexport const deleteContactSuccess =\r\n  createAction(\"contacts/deleteContactSuccess\")\r\nexport const deleteContactError =\r\n  createAction(\"contacts/deleteContactError\")\r\n\r\n\r\n// export const deleteContact = createAction(\"phonebook/delete\");\r\nexport const changeFilter = createAction(\"phonebook/changeFilter\");\r\n\r\n// export default { addContact, deleteContact, changeFilter ,addContactRequest,addContactSuccess,addContactError};\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://61923b18aeab5c0017105e79.mockapi.io\";\r\n\r\nexport async function fetchContactsAPI() {\r\n  const { data } = await axios.get(\"/contacts\");\r\n  return data;\r\n}\r\n\r\nexport async function addContactAPI(o) {\r\n  const { data } = await axios.post(\"/contacts\", o);\r\n  return data;\r\n}\r\nexport async function deleteContactsAPI(id) {\r\n  const { data } = await axios.delete(`/contacts/${id}`);\r\n  return data;\r\n}","import axios from \"axios\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport {\r\n    addContactRequest, addContactSuccess, addContactError,\r\n    deleteContactRequest, deleteContactSuccess, deleteContactError,\r\n    // fetchContactRequest, fetchContactSuccess, fetchContactError\r\n}\r\n    from './actions'\r\nimport {fetchContactsAPI, addContactAPI,deleteContactsAPI} from '../../services/api'\r\n\r\naxios.defaults.baseURL =\r\n    \"https://6192861ad3ae6d0017da8170.mockapi.io/api/v1/\"\r\n\r\n// export const fetchContacts = () => dispatch => {\r\n//     dispatch(fetchContactRequest())\r\n//     axios.get(\"/contacts\")\r\n//         .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n//     .catch(error => dispatch(fetchContactError(error)))\r\n    \r\n//     }\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  \"contacts/fetchContacts\",\r\n  async () => {\r\n    const contacts = await fetchContactsAPI();\r\n    return contacts;\r\n  }\r\n);\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = { name, number }\r\n  dispatch(addContactRequest())\r\n    axios.post(\"/contacts\", contact)\r\n        .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)))\r\n}\r\n\r\n// export const deleteContact = id => dispatch => {\r\n//     dispatch(deleteContactRequest())\r\n//     axios.delete(`/contacts/${id}`).then(() => dispatch(deleteContactSuccess(id)))\r\n//     .catch(error =>dispatch(deleteContactError(error)))\r\n// }\r\nexport const deleteContact = createAsyncThunk(\r\n  \"contacts/deleteContact\",\r\n  async (id) => {\r\n    await deleteContactsAPI(id);\r\n    return id;\r\n  }\r\n);","import React, { useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../redux/contacts/contacts-operations\";\r\n\r\nimport s from \"./ContactForm.module.css\";\r\nconsole.log(addContact);\r\nfunction ContactForm({ phonebookContacts, onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  console.log(addContact(\"dfsafdf\", 5455454));\r\n\r\n \r\n\r\n  //onChangeInput\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  //onSubmitForm\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(name, number);\r\n\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            className={s.input__field}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            className={s.input__field}\r\n            onChange={handleChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.form__button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ contacts: { phonebookContacts } }) =>\r\n  phonebookContacts;\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { deleteContact,fetchContacts } from \"../redux/contacts/contacts-operations\";\r\n\r\nimport s from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, deleteContact, fetchContactsAll, isLoading }) => {\r\n useEffect(()=>{fetchContactsAll()},[])\r\n  return (\r\n    <div>\r\n      <ol className={s.contacts__list}>\r\n        {contacts.map(({ name, number, id }) => (\r\n          <li key={id} className=\"ContactList_item\">\r\n            {name} {number}\r\n            <button\r\n              className={s.contacts__button}\r\n              type=\"button\"\r\n              onClick={() => deleteContact(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          \r\n          </li>\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\nconst mapStateToProps = ({\r\n  \r\n  contacts: { phonebookContacts, phonebookFilter },\r\n}) => ({\r\n  contacts: getVisibleContacts(phonebookContacts, phonebookFilter),\r\n \r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteContact: (id) => dispatch(deleteContact(id)),\r\n  fetchContactsAll:()=>dispatch(fetchContacts())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter }  from \"../redux/contacts/actions\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filter, changeFilter }) => {\r\n  return (\r\n    <div className=\"FilterWrapper\">\r\n      Find contact by name\r\n      <label htmlFor=\"\">\r\n        <input\r\n          className={s.filter__field}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={(e) => changeFilter(e.currentTarget.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { filter } }) => ({ filter: filter });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeFilter: (value) => dispatch(changeFilter(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","\r\n\r\nimport \"./App.css\";\r\nimport ContactForm from \"./ContactForm/ContactFormHooks\";\r\nimport ContactList from \"./ContactList/ContactListHooks\";\r\n\r\nimport Filter from \"./Filter/FilterHooks\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n         <h1>Phonebook</h1>\r\n         <ContactForm  />\r\n         <h2>Contacts</h2>\r\n        <Filter  />\r\n         <ContactList/>\r\n       </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  changeFilter,\r\n  // fetchContactRequest,\r\n  // fetchContactSuccess,\r\n  // fetchContactError,\r\n  \r\n  // deleteContactRequest,\r\n  // deleteContactSuccess,\r\n  // deleteContactError\r\n} from \"./actions.js\";\r\nimport {fetchContacts ,deleteContact } from './contacts-operations'\r\n\r\nconst phonebookContacts = createReducer([], {\r\n  [fetchContacts.fulfilled]:(_, {payload})=>payload ,\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    console.log(payload);\r\n    if (state.some(({ name }) => name === payload.name)) {\r\n      alert(`Attention, the contact is already in contacts list`);\r\n      return state;\r\n    }\r\n    return [...state, payload];\r\n  },\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\nconst phonebookFilter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\nexport const loading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  phonebookContacts,\r\n  phonebookFilter,\r\n  loading\r\n});\r\n\r\n\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./contacts/reducers\";\r\n\r\n// const ContactsPersistConfig = {\r\n//   key: \"contacts\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\n\r\n\r\nconst middleware = [\r\n  \r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n \r\n  \r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts:  contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import './index.css';\r\n// import App from './AppHooks';\r\n// import { store } from './redux/store'\r\n// import {Provider} from 'react-redux'\r\n\r\n\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <Provider store={store}>\r\n//     <App />\r\n//     </Provider>\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root'),\r\n// );\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./AppHooks\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}