{"version":3,"sources":["ContactForm/ContactForm.module.css","ContactList/ContactList.module.css","Filter/Filter.module.css","redux/contacts/actions.js","services/api.js","redux/contacts/contacts-operations.js","redux/selectors.js","ContactForm/ContactFormHooks.js","Loader/Loader.js","ContactList/ContactListHooks.js","Filter/FilterHooks.js","AppHooks.js","redux/contacts/reducers.js","redux/store.js","index.js"],"names":["module","exports","changeFilter","createAction","fetchContactsAPI","a","axios","get","data","addContactAPI","o","post","deleteContactsAPI","id","delete","defaults","baseURL","fetchContacts","createAsyncThunk","contacts","addContact","cont","deleteContact","getContacts","state","phonebookContacts","getLoading","loading","console","log","connect","dispatch","onSubmit","name","number","useState","setName","setNumber","useDispatch","useSelector","handleChange","e","target","value","preventDefault","some","alert","className","s","input__field","onChange","type","pattern","title","required","form__button","LoaderSpin","color","height","width","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","contact","includes","phonebookFilter","fetchContactsAll","isLoading","useEffect","contacts__list","map","contacts__button","onClick","htmlFor","filter__field","currentTarget","App","createReducer","fulfilled","_","payload","pending","rejected","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,aAAe,kCAAkC,aAAe,oC,mBCAlFD,EAAOC,QAAU,CAAC,eAAiB,oCAAoC,iBAAmB,wC,mBCA1FD,EAAOC,QAAU,CAAC,cAAgB,gC,kMCgCrBC,GAtBXC,YAAa,gCAEbA,YAAa,gCAEbA,YAAa,8BAGbA,YAAa,8BAEbA,YAAa,8BAEbA,YAAa,4BAGbA,YAAa,iCAEbA,YAAa,iCAEbA,YAAa,+BAIaA,YAAa,2BC7BlC,SAAeC,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEACkBC,IAAMC,IAAI,aAD5B,uBACGC,EADH,EACGA,KADH,kBAEEA,GAFF,4C,sBAKA,SAAeC,EAAtB,kC,4CAAO,WAA6BC,GAA7B,iBAAAL,EAAA,sEACkBC,IAAMK,KAAK,YAAaD,GAD1C,uBACGF,EADH,EACGA,KADH,kBAEEA,GAFF,4C,sBAIA,SAAeI,EAAtB,kC,4CAAO,WAAiCC,GAAjC,iBAAAR,EAAA,sEACkBC,IAAMQ,OAAN,oBAA0BD,IAD5C,uBACGL,EADH,EACGA,KADH,kBAEEA,GAFF,4C,sBAXPF,IAAMS,SAASC,QAAU,8CCQzBV,IAAMS,SAASC,QACX,sDAUG,IAAMC,EAAgBC,YAC3B,yBAD2C,sBAE3C,4BAAAb,EAAA,sEACyBD,IADzB,cACQe,EADR,yBAESA,GAFT,4CAcWC,EAAaF,YACxB,+BADwC,uCAExC,WAAOG,GAAP,eAAAhB,EAAA,sEACyBI,EAAcY,GADvC,cACQF,EADR,yBAESA,GAFT,2CAFwC,uDAa7BG,EAAgBJ,YAC3B,yBAD2C,uCAE3C,WAAOL,GAAP,SAAAR,EAAA,sEACQO,EAAkBC,GAD1B,gCAESA,GAFT,2CAF2C,uDClDhCU,EAAc,SAACC,GAAD,OAAWA,EAAML,SAASM,mBACxCC,EAAa,SAACF,GAAD,OAAWA,EAAML,SAASQ,S,wBCMpDC,QAAQC,IAAIT,GAwFZ,IAIeU,cAAQ,MAJI,SAACC,GAAD,MAAe,CACxCC,SAAU,SAACC,EAAMC,GAAP,OAAkBH,EAASX,EAAWa,EAAMC,QAGzCJ,EA3Ff,YAAsD,EAA/BL,kBAA+B,EAAZO,SAAa,IACrD,EAAwBG,mBAAS,IAAjC,mBAAOF,EAAP,KAAaG,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOD,EAAP,KAAeG,EAAf,KACMN,EAAWO,cAEXnB,EAAWoB,YAAYhB,GAMvBiB,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MAEd,OAAQV,GACN,IAAK,OACHG,EAAQO,GACR,MAEF,IAAK,SACHN,EAAUM,GACV,MAEF,QACE,SAqBN,OACE,8BACE,uBAAMX,SAnBW,SAACS,GACpBA,EAAEG,iBACL,IAAMvB,EACKY,EAGP,GAAId,EAAS0B,MAAK,qBAAGZ,OAAoBZ,KACxC,OAAOyB,MAAM,sDAGff,EAASX,EAAW,CAACa,OAAMC,YAG3BE,EAAQ,IACRC,EAAU,KAKR,UACE,yCAEE,uBACEU,UAAWC,IAAEC,aACbC,SAAUV,EACVW,KAAK,OACLlB,KAAK,OACLU,MAAOV,EACPmB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,2CAEE,uBACEP,UAAWC,IAAEC,aACbC,SAAUV,EACVW,KAAK,MACLlB,KAAK,SACLU,MAAOT,EACPkB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQP,UAAWC,IAAEO,aAAcJ,KAAK,SAAxC,iC,iBClEO,SAASK,IAGtB,OACI,cAAC,IAAD,CAEAT,UAAU,SACVI,KAAK,QACLM,MAAM,UACNC,OAAQ,IACRC,MAAO,M,qBCYPC,EAAqB,SAACC,EAAaC,GACvC,IAAMC,EAAmBD,EAAOE,cAChC,OAAOH,EAAYC,QAAO,SAACG,GAAD,OACxBA,EAAQhC,KAAK+B,cAAcE,SAASH,OAgBzBjC,eAbS,SAAC,GAAD,QAEtBX,SAAYM,EAFU,EAEVA,kBAAmB0C,EAFT,EAESA,gBAFT,MAGjB,CACLhD,SAAUyC,EAAmBnC,EAAmB0C,OAIvB,SAACpC,GAAD,MAAe,CACxCT,cAAe,SAACT,GAAD,OAAQkB,EAAST,EAAcT,KAC9CuD,iBAAiB,kBAAIrC,EAASd,SAGjBa,EA7CK,SAAC,GAAqD,IAAnDX,EAAkD,EAAlDA,SAAUG,EAAwC,EAAxCA,cAAe8C,EAAyB,EAAzBA,iBACxCC,EAAY9B,YAAYb,GAE9B,OADD4C,qBAAU,WAAKF,MAAoB,IAGhC,gCACKC,GAAa,cAACb,EAAD,IAChB,oBAAIT,UAAWC,IAAEuB,eAAjB,SACGpD,EAASqD,KAAI,gBAAGvC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQrB,EAAjB,EAAiBA,GAAjB,OACZ,qBAAakC,UAAU,mBAAvB,UACGd,EADH,IACUC,EACR,wBACEa,UAAWC,IAAEyB,iBACbtB,KAAK,SACLuB,QAAS,kBAAMpD,EAAcT,IAH/B,sBAFOA,c,iBCOJiB,eANS,SAAC,GAAD,MAA+B,CAAEgC,OAAjC,EAAG3C,SAAY2C,WAEZ,SAAC/B,GAAD,MAAe,CACxC7B,aAAc,SAACyC,GAAD,OAAWZ,EAAS7B,EAAayC,QAGlCb,EAvBA,SAAC,GAA8B,IAA5BgC,EAA2B,EAA3BA,OAAQ5D,EAAmB,EAAnBA,aACxB,OACE,sBAAK6C,UAAU,gBAAf,iCAEE,uBAAO4B,QAAQ,GAAf,SACE,uBACE5B,UAAWC,IAAE4B,cACbzB,KAAK,OACLlB,KAAK,SACLU,MAAOmB,EACPZ,SAAU,SAACT,GAAD,OAAOvC,EAAauC,EAAEoC,cAAclC,kBCOzCmC,I,IAAAA,EAdf,WACE,OACE,mCACE,sBAAK/B,UAAU,MAAf,UACG,2CACA,cAAC,EAAD,IACA,0CACD,cAAC,EAAD,IACC,cAAC,EAAD,U,+CCCHtB,EAAoBsD,YAAc,IAAD,mBACpC9D,EAAc+D,WAAW,SAACC,EAAD,YAAKC,WADM,cAEpC9D,EAAW4D,WAAY,SAACxD,EAAD,GAAyB,IAAf0D,EAAc,EAAdA,QAMhC,OALAtD,QAAQC,IAAIqD,GAKN,GAAN,mBAAW1D,GAAX,CAAkB0D,OARiB,cAUpC5D,EAAc0D,WAAY,SAACxD,EAAD,OAAU0D,EAAV,EAAUA,QAAV,OACzB1D,EAAMsC,QAAO,SAACG,GAAD,OAAaA,EAAQpD,KAAOqE,QAXN,IAajCf,EAAkBY,YAAc,GAAD,eAClC7E,GAAe,SAAC+E,EAAD,YAAMC,YAEXvD,EAAUoD,aAAc,GAAD,mBACjC9D,EAAckE,SAAU,kBAAM,KADG,cAEjClE,EAAc+D,WAAY,kBAAM,KAFC,cAGjC/D,EAAcmE,UAAW,kBAAM,KAHE,cAIjChE,EAAW+D,SAAU,kBAAM,KAJM,cAKjC/D,EAAW4D,WAAY,kBAAM,KALI,cAMjC5D,EAAWgE,UAAW,kBAAM,KANK,cAOjC9D,EAAc6D,SAAU,kBAAM,KAPG,cAQjC7D,EAAc0D,WAAY,kBAAM,KARC,cASjC1D,EAAc8D,UAAW,kBAAM,KATE,IAYrBC,cAAgB,CAC7B5D,oBACA0C,kBACAxC,YC1BI2D,GAAU,sBAEXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAJhD,CASdC,MAaaC,GAVDC,YAAe,CAC3BC,QAAS,CACPhF,SAAWiF,GAEbd,cACAe,UAAUC,ICTZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,W","file":"static/js/main.e5860f66.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input__field\":\"ContactForm_input__field__3mVkt\",\"form__button\":\"ContactForm_form__button__5UX7f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactList_contacts__list__Pyj5_\",\"contacts__button\":\"ContactList_contacts__button__eoAlX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__field\":\"Filter_filter__field__2g_TK\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// const addContact = createAction(\"contacts/add\", (name, number) => ({\r\n//   payload: {\r\n//     id: shortid.generate(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// }));\r\n\r\nexport const fetchContactRequest =\r\n  createAction(\"contacts/fetchContactRequest\")\r\nexport const fetchContactSuccess =\r\n  createAction(\"contacts/fetchContactSuccess\")\r\nexport const fetchContactError =\r\n  createAction(\"contacts/fetchContactError\")\r\n\r\nexport const addContactRequest =\r\n  createAction(\"contacts/addContactRequest\")\r\nexport const addContactSuccess =\r\n  createAction(\"contacts/addContactSuccess\")\r\nexport const addContactError =\r\n  createAction(\"contacts/addContactError\")\r\n\r\nexport const deleteContactRequest =\r\n  createAction(\"contacts/deleteContactRequest\")\r\nexport const deleteContactSuccess =\r\n  createAction(\"contacts/deleteContactSuccess\")\r\nexport const deleteContactError =\r\n  createAction(\"contacts/deleteContactError\")\r\n\r\n\r\n// export const deleteContact = createAction(\"phonebook/delete\");\r\nexport const changeFilter = createAction(\"phonebook/changeFilter\");\r\n\r\n// export default { addContact, deleteContact, changeFilter ,addContactRequest,addContactSuccess,addContactError};\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://61923b18aeab5c0017105e79.mockapi.io\";\r\n\r\nexport async function fetchContactsAPI() {\r\n  const { data } = await axios.get(\"/contacts\");\r\n  return data;\r\n}\r\n\r\nexport async function addContactAPI(o) {\r\n  const { data } = await axios.post(\"/contacts\", o);\r\n  return data;\r\n}\r\nexport async function deleteContactsAPI(id) {\r\n  const { data } = await axios.delete(`/contacts/${id}`);\r\n  return data;\r\n}","import axios from \"axios\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport {\r\n    // addContactRequest, addContactSuccess, addContactError,\r\n    // deleteContactRequest, deleteContactSuccess, deleteContactError,\r\n    // fetchContactRequest, fetchContactSuccess, fetchContactError\r\n}\r\n    from './actions'\r\nimport {fetchContactsAPI, addContactAPI,deleteContactsAPI} from '../../services/api'\r\n\r\naxios.defaults.baseURL =\r\n    \"https://6192861ad3ae6d0017da8170.mockapi.io/api/v1/\"\r\n\r\n// export const fetchContacts = () => dispatch => {\r\n//     dispatch(fetchContactRequest())\r\n//     axios.get(\"/contacts\")\r\n//         .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n//     .catch(error => dispatch(fetchContactError(error)))\r\n    \r\n//     }\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  \"contacts/fetchContacts\",\r\n  async () => {\r\n    const contacts = await fetchContactsAPI();\r\n    return contacts;\r\n  }\r\n);\r\n\r\n// export const addContact = (name, number) => dispatch => {\r\n//   const contact = { name, number }\r\n//   dispatch(addContactRequest())\r\n//     axios.post(\"/contacts\", contact)\r\n//         .then(({ data }) => dispatch(addContactSuccess(data)))\r\n//     .catch(error => dispatch(addContactError(error)))\r\n// }\r\n\r\nexport const addContact = createAsyncThunk(\r\n  \"contacts/сontactsGlobal\",\r\n  async (cont) => {\r\n    const contacts = await addContactAPI(cont);\r\n    return contacts;\r\n  }\r\n);\r\n\r\n// export const deleteContact = id => dispatch => {\r\n//     dispatch(deleteContactRequest())\r\n//     axios.delete(`/contacts/${id}`).then(() => dispatch(deleteContactSuccess(id)))\r\n//     .catch(error =>dispatch(deleteContactError(error)))\r\n// }\r\nexport const deleteContact = createAsyncThunk(\r\n  \"contacts/deleteContact\",\r\n  async (id) => {\r\n    await deleteContactsAPI(id);\r\n    return id;\r\n  }\r\n);","export const getContacts = (state) => state.contacts.phonebookContacts\r\nexport const getLoading = (state) => state.contacts.loading;","import React, { useState } from \"react\";\r\n\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { addContact } from \"../redux/contacts/contacts-operations\";\r\nimport {getContacts} from '../redux/selectors'\r\n\r\nimport s from \"./ContactForm.module.css\";\r\nconsole.log(addContact);\r\nfunction ContactForm({ phonebookContacts, onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const dispatch = useDispatch()\r\n\r\n  const contacts = useSelector(getContacts)\r\n  \r\n\r\n \r\n\r\n  //onChangeInput\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  //onSubmitForm\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n const cont = {\r\n      name: name,\r\n      phone: number,\r\n    };\r\n     if (contacts.some(({ name }) => name === cont.name)) {\r\n      return alert(`Attention, the contact is already in contacts list`);\r\n    }\r\n    // dispatch(addContact(cont))\r\n    dispatch(addContact({name, number}))\r\n    \r\n\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            className={s.input__field}\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            className={s.input__field}\r\n            onChange={handleChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.form__button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n// const mapStateToProps = ({ contacts: { phonebookContacts } }) =>\r\n//   phonebookContacts;\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","// import { ImSpinner } from \"react-icons/im\";\r\n// import styles from \"./Loader.module.css\";\r\n\r\n// export default function Loader() {\r\n//   return (\r\n//     <div className=\"spinner\">\r\n//       <div className={styles.spin}>\r\n//         <ImSpinner size=\"32\" className=\"icon-spin\" />\r\n//         Loading...\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nimport Loader from 'react-loader-spinner';\r\nexport default function LoaderSpin() {\r\n  //other logic\r\n\r\n  return (\r\n      <Loader\r\n          \r\n      className=\"loader\"\r\n      type=\"Audio\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n        //   timeout={300} //3 secs\r\n          \r\n    />\r\n  );\r\n}","\r\n\r\nimport React from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { deleteContact, fetchContacts } from \"../redux/contacts/contacts-operations\";\r\nimport LoaderSpin from './../Loader/Loader'\r\nimport {getLoading} from '../redux/selectors'\r\n\r\nimport s from \"./ContactList.module.css\";\r\n\r\n\r\nconst ContactList = ({ contacts, deleteContact, fetchContactsAll,  }) => {\r\n  const isLoading = useSelector(getLoading);\r\n useEffect(()=>{fetchContactsAll()},[])\r\n  return (\r\n  \r\n    <div>\r\n        {isLoading && <LoaderSpin />}\r\n      <ol className={s.contacts__list}>\r\n        {contacts.map(({ name, number, id }) => (\r\n          <li key={id} className=\"ContactList_item\">\r\n            {name} {number}\r\n            <button\r\n              className={s.contacts__button}\r\n              type=\"button\"\r\n              onClick={() => deleteContact(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          \r\n          </li>\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return allContacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\nconst mapStateToProps = ({\r\n  \r\n  contacts: { phonebookContacts, phonebookFilter },\r\n}) => ({\r\n  contacts: getVisibleContacts(phonebookContacts, phonebookFilter),\r\n \r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  deleteContact: (id) => dispatch(deleteContact(id)),\r\n  fetchContactsAll:()=>dispatch(fetchContacts())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter }  from \"../redux/contacts/actions\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filter, changeFilter }) => {\r\n  return (\r\n    <div className=\"FilterWrapper\">\r\n      Find contact by name\r\n      <label htmlFor=\"\">\r\n        <input\r\n          className={s.filter__field}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={(e) => changeFilter(e.currentTarget.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { filter } }) => ({ filter: filter });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeFilter: (value) => dispatch(changeFilter(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","\r\n\r\nimport \"./App.css\";\r\nimport ContactForm from \"./ContactForm/ContactFormHooks\";\r\nimport ContactList from \"./ContactList/ContactListHooks\";\r\n\r\nimport Filter from \"./Filter/FilterHooks\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n         <h1>Phonebook</h1>\r\n         <ContactForm  />\r\n         <h2>Contacts</h2>\r\n        <Filter  />\r\n         <ContactList/>\r\n       </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  // addContactRequest,\r\n  // addContactSuccess,\r\n  // addContactError,\r\n  changeFilter,\r\n  // fetchContactRequest,\r\n  // fetchContactSuccess,\r\n  // fetchContactError,\r\n  \r\n  // deleteContactRequest,\r\n  // deleteContactSuccess,\r\n  // deleteContactError\r\n} from \"./actions.js\";\r\nimport {fetchContacts ,deleteContact, addContact } from './contacts-operations'\r\n\r\nconst phonebookContacts = createReducer([], {\r\n  [fetchContacts.fulfilled]:(_, {payload})=>payload ,\r\n  [addContact.fulfilled]: (state, { payload }) => {\r\n    console.log(payload);\r\n    // if (state.some(({ name }) => name === payload.name)) {\r\n    //   alert(`Attention, the contact is already in contacts list`);\r\n    //   return state;\r\n    // }\r\n    return [...state, payload];\r\n  },\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\nconst phonebookFilter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\nexport const loading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  phonebookContacts,\r\n  phonebookFilter,\r\n  loading\r\n});\r\n\r\n\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./contacts/reducers\";\r\n\r\n// const ContactsPersistConfig = {\r\n//   key: \"contacts\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\n\r\n\r\nconst middleware = [\r\n  \r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n \r\n  \r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts:  contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import './index.css';\r\n// import App from './AppHooks';\r\n// import { store } from './redux/store'\r\n// import {Provider} from 'react-redux'\r\n\r\n\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <Provider store={store}>\r\n//     <App />\r\n//     </Provider>\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root'),\r\n// );\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./AppHooks\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}